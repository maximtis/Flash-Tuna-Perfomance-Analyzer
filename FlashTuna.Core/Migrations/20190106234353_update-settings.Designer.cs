// <auto-generated />
using System;
using FlashTuna.Core.Storage.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlashTuna.Core.Migrations
{
    [DbContext(typeof(FlashTunaDbContext))]
    [Migration("20190106234353_update-settings")]
    partial class updatesettings
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlashTuna.Core.Common.PerfomanceMetrics.OperationMetric.OperationMetricResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CallId");

                    b.Property<string>("ClassName");

                    b.Property<string>("MethodName");

                    b.Property<int>("MetricResultStatus");

                    b.Property<double?>("Milliseconds");

                    b.Property<string>("ModuleName");

                    b.Property<string>("Tag");

                    b.Property<DateTime>("TimePoint");

                    b.HasKey("Id");

                    b.ToTable("OperationMetricResults");
                });

            modelBuilder.Entity("FlashTuna.Core.Modules.Errors.ErrorResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassName");

                    b.Property<string>("ExceptionMessae");

                    b.Property<string>("ExceptionType");

                    b.Property<string>("MethodName");

                    b.Property<string>("ModuleName");

                    b.Property<string>("Tag");

                    b.Property<DateTime>("TimePoint");

                    b.HasKey("Id");

                    b.ToTable("ErrorResults");
                });

            modelBuilder.Entity("FlashTuna.Core.Modules.Usage.Setting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConnectionString");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("FlashTuna.Core.Modules.Usage.TrackedMethod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassName");

                    b.Property<string>("Name");

                    b.Property<long?>("SettingId");

                    b.HasKey("Id");

                    b.HasIndex("SettingId");

                    b.ToTable("TrackedMethods");
                });

            modelBuilder.Entity("FlashTuna.Core.Modules.Usage.TrackedMethod", b =>
                {
                    b.HasOne("FlashTuna.Core.Modules.Usage.Setting")
                        .WithMany("TrackedMethods")
                        .HasForeignKey("SettingId");
                });
#pragma warning restore 612, 618
        }
    }
}
